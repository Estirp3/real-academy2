{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\",\n  id: \"gallery\"\n};\nconst _hoisted_2 = {\n  class: \"slider\"\n};\nconst _hoisted_3 = {\n  class: \"slide-track\"\n};\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.imageUrls.concat($data.imageUrls), (image, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"slide\",\n      key: 'first-' + index\n    }, [_createElementVNode(\"canvas\", {\n      ref_for: true,\n      ref: \"canvas\",\n      width: 350,\n      height: 350\n    }, null, 512 /* NEED_PATCH */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.modalVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal-overlay\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modal-content fade-in\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"×\"), _createElementVNode(\"img\", {\n    src: $data.modalImage,\n    alt: \"\"\n  }, null, 8 /* PROPS */, _hoisted_4)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","imageUrls","concat","image","index","key","ref_for","ref","width","height","modalVisible","onClick","_cache","args","$options","closeModal","_withModifiers","src","modalImage","alt","_hoisted_4","_createCommentVNode"],"sources":["C:\\Users\\DIVDOC-INTERNET\\Desktop\\real-academy\\real-academy-frontend\\src\\components\\PhotoGallery.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" id=\"gallery\">\r\n    <div class=\"slider\">\r\n      <div class=\"slide-track\">\r\n        <div\r\n          class=\"slide\"\r\n          v-for=\"(image, index) in imageUrls.concat(imageUrls)\"\r\n          :key=\"'first-' + index\"\r\n        >\r\n          <canvas ref=\"canvas\" :width=\"350\" :height=\"350\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"modalVisible\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content fade-in\" @click.stop>\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <img :src=\"modalImage\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PhotoGallery',\r\n  data() {\r\n    return {\r\n      imageUrls: [], // Aquí se almacenarán las URLs de las imágenes\r\n      modalVisible: false, // Controla la visibilidad del modal\r\n      modalImage: null // Almacena la URL de la imagen que se muestra en el modal\r\n    };\r\n  },\r\n  async created() {\r\n    this.imageUrls = await this.fetchImageUrls(); // Llama a la función para obtener las URLs\r\n    this.renderImages(); // Renderiza las imágenes en los canvases\r\n    this.disableRightClick(); // Deshabilita el clic derecho\r\n  },\r\n  methods: {\r\n    async fetchImageUrls() {\r\n      const totalImages = 50; // Cambia este número según el total de imágenes que tengas\r\n      return Array.from({ length: totalImages }, (_, i) =>\r\n        `/real-academy-fc/fotos-real/foto-real-facup-${i + 1}.jpeg` // Asegúrate de que la URL sea correcta para todas las imágenes\r\n      );\r\n    },\r\n    renderImages() {\r\n      const canvasElements = this.$refs.canvas;\r\n      this.imageUrls.forEach((url, index) => {\r\n        const canvas = canvasElements[index];\r\n        const ctx = canvas.getContext('2d');\r\n        const img = new Image();\r\n        img.src = url;\r\n        img.onload = () => {\r\n          // Dibuja la imagen en el canvas\r\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n          this.addWatermark(ctx, canvas.width, canvas.height); // Añade marca de agua\r\n        };\r\n      });\r\n    },\r\n    addWatermark(ctx, width, height) {\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.5)'; // Color blanco semi-transparente\r\n      ctx.font = 'bold 24px Arial'; // Configuración de fuente\r\n      ctx.fillText('© Tu Marca', width - 150, height - 30); // Texto de marca de agua\r\n    },\r\n    openModal(imageUrl) {\r\n      this.modalImage = imageUrl; // Asigna la URL de la imagen al modal\r\n      this.modalVisible = true; // Muestra el modal\r\n      document.body.style.overflow = 'hidden'; // Desactiva el scroll del sitio web\r\n    },\r\n    closeModal() {\r\n      this.modalVisible = false; // Oculta el modal\r\n      document.body.style.overflow = ''; // Reactiva el scroll del sitio web\r\n    },\r\n    disableRightClick() {\r\n      document.addEventListener('contextmenu', (e) => {\r\n        e.preventDefault(); // Previene el menú contextual en el clic derecho\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  margin: 0; /* Elimina el margen del body para que el carrusel pueda ocupar todo el ancho */\r\n}\r\n\r\n.container {\r\n  position: relative; /* Establece un contexto para los elementos hijos */\r\n}\r\n\r\n@keyframes scroll {\r\n  0% { transform: translateX(0); }\r\n  100% { transform: translateX(calc(-400px * 50)); } /* Ajusta según la cantidad de imágenes */\r\n}\r\n\r\n.slider {\r\n  background: black; /* Cambia el fondo del carrusel a negro para un efecto flotante */\r\n  height: 500px; /* Ajusta la altura del carrusel según el tamaño de las imágenes */\r\n  margin: auto; /* Centra el carrusel */\r\n  overflow: hidden; /* Oculta el contenido que desborda el contenedor */\r\n  position: relative; /* Permite la posición absoluta de los hijos */\r\n  width: 100vw; /* Abarca todo el ancho del viewport */\r\n}\r\n\r\n.slide-track {\r\n  animation: scroll 80s linear infinite; /* Animación que hace que el carrusel se desplace de forma continua */\r\n  display: flex; /* Utiliza flexbox para alinear las imágenes en fila */\r\n  width: calc(300px * 100); /* Ajusta el ancho total de la pista del carrusel */\r\n}\r\n\r\n.slide {\r\n  position: relative; /* Necesario para el canvas */\r\n}\r\n\r\ncanvas {\r\n  border-radius: 50%; /* Hace que los canvases sean completamente redondos */\r\n  cursor: pointer; /* Cambia el cursor para indicar que es clicable */\r\n  transition: transform 0.3s ease; /* Transición suave para el zoom */\r\n}\r\n\r\ncanvas:hover {\r\n  transform: scale(1.05); /* Aumenta el tamaño del canvas al pasar el puntero */\r\n}\r\n\r\n/* Estilos del modal */\r\n.modal-overlay {\r\n  position: fixed; /* Fija el modal a la ventana */\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.8); /* Fondo oscuro con opacidad para el modal */\r\n  display: flex; /* Utiliza flexbox para centrar el contenido del modal */\r\n  align-items: center; /* Alinea verticalmente al centro */\r\n  justify-content: center; /* Alinea horizontalmente al centro */\r\n  z-index: 1000; /* Asegura que el modal esté sobre todo el contenido */\r\n  opacity: 0; /* Inicialmente oculto */\r\n  animation: fadeIn 0.5s forwards; /* Añadir animación de entrada */\r\n}\r\n\r\n@keyframes fadeIn {\r\n  to {\r\n    opacity: 1; /* Se vuelve completamente visible */\r\n  }\r\n}\r\n\r\n.modal-content {\r\n  position: relative; /* Necesario para el botón de cerrar */\r\n}\r\n\r\n.close {\r\n  position: absolute; /* Colocar el botón en la esquina superior derecha */\r\n  top: 10px;\r\n  right: 20px;\r\n  font-size: 24px; /* Tamaño del icono de cerrar */\r\n  color: white; /* Color del icono de cerrar */\r\n  cursor: pointer; /* Cambiar cursor al pasar por encima */\r\n  transition: transform 0.3s ease; /* Transición suave para el efecto de zoom */\r\n}\r\n\r\n.close:hover {\r\n  transform: scale(1.2); /* Aumenta el tamaño del icono al pasar el puntero */\r\n}\r\n\r\n.modal-content img {\r\n  max-width: 90vw; /* Limita el tamaño máximo de la imagen en el modal */\r\n  max-height: 90vh; /* Limita la altura máxima de la imagen en el modal */\r\n  border-radius: 20px; /* Agrega un borde redondeado a la imagen del modal */\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC,WAAW;EAACC,EAAE,EAAC;;;EACnBD,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAa;mBAH9B;;uBACEE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,mBAAA,CAUM,OAVNC,UAUM,GATJD,mBAAA,CAQM,OARNE,UAQM,I,kBAPJJ,mBAAA,CAMMK,SAAA,QAVdC,WAAA,CAMmCC,KAAA,CAAAC,SAAS,CAACC,MAAM,CAACF,KAAA,CAAAC,SAAS,GAN7D,CAMkBE,KAAK,EAAEC,KAAK;yBAFtBX,mBAAA,CAMM;MALJF,KAAK,EAAC,OAAO;MAEZc,GAAG,aAAaD;QAEjBT,mBAAA,CAAyD;MATnEW,OAAA;MASkBC,GAAG,EAAC,QAAQ;MAAEC,KAAK,EAAE,GAAG;MAAGC,MAAM,EAAE;;sCAItCT,KAAA,CAAAU,YAAY,I,cAAvBjB,mBAAA,CAKM;IAlBVY,GAAA;IAa6Bd,KAAK,EAAC,eAAe;IAAEoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/DlB,mBAAA,CAGM;IAHDJ,KAAK,EAAC,uBAAuB;IAAEoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAd/CI,cAAA,CAcyC,QAAW;MAC5CrB,mBAAA,CAAsD;IAAhDJ,KAAK,EAAC,OAAO;IAAEoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,GAAO,GAC/ClB,mBAAA,CAAgC;IAA1BsB,GAAG,EAAEjB,KAAA,CAAAkB,UAAU;IAAEC,GAAG,EAAC;0BAhBnCC,UAAA,E,OAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}