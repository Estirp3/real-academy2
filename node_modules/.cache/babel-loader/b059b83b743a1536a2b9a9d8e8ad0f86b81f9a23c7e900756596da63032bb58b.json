{"ast":null,"code":"export default {\n  name: 'PhotoGallery',\n  data() {\n    return {\n      imageUrls: [],\n      // Aquí se almacenarán las URLs de las imágenes\n      modalVisible: false,\n      // Controla la visibilidad del modal\n      modalImage: null // Almacena la URL de la imagen que se muestra en el modal\n    };\n  },\n  async created() {\n    this.imageUrls = await this.fetchImageUrls(); // Llama a la función para obtener las URLs\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initIntersectionObserver(); // Inicia la carga diferida de imágenes después de que el DOM esté completamente renderizado\n    });\n  },\n  methods: {\n    async fetchImageUrls() {\n      const totalImages = 50; // Cambia este número según el total de imágenes que tengas\n      return Array.from({\n        length: totalImages\n      }, (_, i) => `/real-academy-fc/fotos-real/foto-real-facup-${i + 1}.jpeg`);\n    },\n    openModal(imageUrl) {\n      this.modalImage = imageUrl; // Asigna la URL de la imagen al modal\n      this.modalVisible = true; // Muestra el modal\n      document.body.style.overflow = 'hidden'; // Desactiva el scroll del sitio web\n    },\n    closeModal() {\n      this.modalVisible = false; // Oculta el modal\n      document.body.style.overflow = ''; // Reactiva el scroll del sitio web\n    },\n    initIntersectionObserver() {\n      const options = {\n        root: null,\n        // Usamos el viewport del navegador\n        rootMargin: '0px',\n        threshold: 0.1 // Cargar imágenes cuando el 10% de la imagen esté visible\n      };\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const img = entry.target;\n            img.src = img.dataset.src; // Carga la imagen\n            observer.unobserve(img); // Deja de observar la imagen una vez cargada\n          }\n        });\n      }, options);\n\n      // Aseguramos que this.$refs.images exista y tenga elementos antes de aplicar forEach\n      if (this.$refs.images && this.$refs.images.length > 0) {\n        this.$refs.images.forEach(img => observer.observe(img));\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","imageUrls","modalVisible","modalImage","created","fetchImageUrls","mounted","$nextTick","initIntersectionObserver","methods","totalImages","Array","from","length","_","i","openModal","imageUrl","document","body","style","overflow","closeModal","options","root","rootMargin","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","img","target","src","dataset","unobserve","$refs","images","observe"],"sources":["C:\\Users\\DIVDOC-INTERNET\\Desktop\\real-academy\\real-academy-frontend\\src\\components\\PhotoGallery.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" id=\"gallery\">\r\n    <div class=\"slider\">\r\n      <div class=\"slide-track\">\r\n        <div class=\"slide\" v-for=\"(image, index) in imageUrls.concat(imageUrls)\" :key=\"'first-' + index\">\r\n          <img :data-src=\"image\" ref=\"images\" @click=\"openModal(image)\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"modalVisible\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content fade-in\" @click.stop>\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span> <!-- Botón de cerrar -->\r\n        <img :src=\"modalImage\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PhotoGallery',\r\n  data() {\r\n    return {\r\n      imageUrls: [], // Aquí se almacenarán las URLs de las imágenes\r\n      modalVisible: false, // Controla la visibilidad del modal\r\n      modalImage: null // Almacena la URL de la imagen que se muestra en el modal\r\n    };\r\n  },\r\n  async created() {\r\n    this.imageUrls = await this.fetchImageUrls(); // Llama a la función para obtener las URLs\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.initIntersectionObserver(); // Inicia la carga diferida de imágenes después de que el DOM esté completamente renderizado\r\n    });\r\n  },\r\n  methods: {\r\n    async fetchImageUrls() {\r\n      const totalImages = 50; // Cambia este número según el total de imágenes que tengas\r\n      return Array.from({ length: totalImages }, (_, i) => `/real-academy-fc/fotos-real/foto-real-facup-${i + 1}.jpeg`);\r\n    },\r\n    openModal(imageUrl) {\r\n      this.modalImage = imageUrl; // Asigna la URL de la imagen al modal\r\n      this.modalVisible = true; // Muestra el modal\r\n      document.body.style.overflow = 'hidden'; // Desactiva el scroll del sitio web\r\n    },\r\n    closeModal() {\r\n      this.modalVisible = false; // Oculta el modal\r\n      document.body.style.overflow = ''; // Reactiva el scroll del sitio web\r\n    },\r\n    initIntersectionObserver() {\r\n      const options = {\r\n        root: null, // Usamos el viewport del navegador\r\n        rootMargin: '0px',\r\n        threshold: 0.1 // Cargar imágenes cuando el 10% de la imagen esté visible\r\n      };\r\n\r\n      const observer = new IntersectionObserver((entries, observer) => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            const img = entry.target;\r\n            img.src = img.dataset.src; // Carga la imagen\r\n            observer.unobserve(img); // Deja de observar la imagen una vez cargada\r\n          }\r\n        });\r\n      }, options);\r\n\r\n      // Aseguramos que this.$refs.images exista y tenga elementos antes de aplicar forEach\r\n      if (this.$refs.images && this.$refs.images.length > 0) {\r\n        this.$refs.images.forEach(img => observer.observe(img));\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  margin: 0; /* Elimina el margen del body para que el carrusel pueda ocupar todo el ancho */\r\n}\r\n\r\n.container {\r\n  position: relative; /* Establece un contexto para los elementos hijos */\r\n}\r\n\r\n@keyframes scroll {\r\n  0% { transform: translateX(0); }\r\n  100% { transform: translateX(calc(-400px * 60)); } /* Ajuste para que el carrusel cubra todas las imágenes */\r\n}\r\n\r\n.slider {\r\n  background: black; /* Cambia el fondo del carrusel a negro para un efecto flotante */\r\n  height: 500px; /* Ajusta la altura del carrusel según el tamaño de las imágenes */\r\n  margin: auto; /* Centra el carrusel */\r\n  overflow: hidden; /* Oculta el contenido que desborda el contenedor */\r\n  position: relative; /* Permite la posición absoluta de los hijos */\r\n  width: 100vw; /* Abarca todo el ancho del viewport */\r\n}\r\n\r\n.slide-track {\r\n  animation: scroll 160s linear infinite; /* Duración aumentada a 160s para ralentizar el carrusel */\r\n  display: flex; /* Utiliza flexbox para alinear las imágenes en fila */\r\n  width: calc(300px * 100); /* Ajuste para asegurar espacio para todas las imágenes */\r\n}\r\n\r\n.slide img {\r\n  height: 350px; /* Ajusta la altura máxima de las imágenes */\r\n  width: 350px; /* Ajusta el ancho máximo de las imágenes */\r\n  object-fit: cover; /* Mantiene la proporción de la imagen sin cortarla */\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n  margin: 20px;\r\n  border-radius: 50%; /* Hace que las imágenes sean redondas */\r\n  position: relative;\r\n  top: 100px;\r\n}\r\n\r\n.slide img:hover {\r\n  transform: scale(1.1); /* Aumenta el tamaño de la imagen al pasar el puntero */\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3); /* Aumenta el efecto de sombra al hacer hover */\r\n}\r\n\r\n/* Estilos del modal */\r\n.modal-overlay {\r\n  position: fixed; /* Fija el modal a la ventana */\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.8); /* Fondo oscuro con opacidad para el modal */\r\n  display: flex; /* Utiliza flexbox para centrar el contenido del modal */\r\n  align-items: center; /* Alinea verticalmente al centro */\r\n  justify-content: center; /* Alinea horizontalmente al centro */\r\n  z-index: 1000; /* Asegura que el modal esté sobre todo el contenido */\r\n  opacity: 0; /* Inicialmente oculto */\r\n  animation: fadeIn 0.5s forwards; /* Añadir animación de entrada */\r\n}\r\n\r\n@keyframes fadeIn {\r\n  to {\r\n    opacity: 1; /* Se vuelve completamente visible */\r\n  }\r\n}\r\n\r\n.modal-content {\r\n  position: relative; /* Necesario para el botón de cerrar */\r\n}\r\n\r\n.close {\r\n  position: absolute; /* Colocar el botón en la esquina superior derecha */\r\n  top: 10px;\r\n  right: 20px;\r\n  font-size: 24px; /* Tamaño del icono de cerrar */\r\n  color: white; /* Color del icono de cerrar */\r\n  cursor: pointer; /* Cambiar cursor al pasar por encima */\r\n  transition: transform 0.3s ease; /* Transición suave para el efecto de zoom */\r\n}\r\n\r\n.close:hover {\r\n  transform: scale(1.2); /* Aumenta el tamaño del icono al pasar el puntero */\r\n}\r\n\r\n.modal-content img {\r\n  max-width: 90vw; /* Máximo ancho de la imagen */\r\n  max-height: 90vh; /* Máxima altura de la imagen */\r\n  object-fit: contain; /* Asegura que la imagen se ajuste al modal sin ser cortada */\r\n  border-radius: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAmBA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MAAE;MACfC,YAAY,EAAE,KAAK;MAAE;MACrBC,UAAU,EAAE,IAAG,CAAE;IACnB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACH,SAAQ,GAAI,MAAM,IAAI,CAACI,cAAc,CAAC,CAAC,EAAE;EAChD,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,MAAM;MACnB,IAAI,CAACC,wBAAwB,CAAC,CAAC,EAAE;IACnC,CAAC,CAAC;EACJ,CAAC;EACDC,OAAO,EAAE;IACP,MAAMJ,cAAcA,CAAA,EAAG;MACrB,MAAMK,WAAU,GAAI,EAAE,EAAE;MACxB,OAAOC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEH;MAAY,CAAC,EAAE,CAACI,CAAC,EAAEC,CAAC,KAAK,+CAA+CA,CAAA,GAAI,CAAC,OAAO,CAAC;IACnH,CAAC;IACDC,SAASA,CAACC,QAAQ,EAAE;MAClB,IAAI,CAACd,UAAS,GAAIc,QAAQ,EAAE;MAC5B,IAAI,CAACf,YAAW,GAAI,IAAI,EAAE;MAC1BgB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,QAAQ,EAAE;IAC3C,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACpB,YAAW,GAAI,KAAK,EAAE;MAC3BgB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,EAAE,EAAE;IACrC,CAAC;IACDb,wBAAwBA,CAAA,EAAG;MACzB,MAAMe,OAAM,GAAI;QACdC,IAAI,EAAE,IAAI;QAAE;QACZC,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE,GAAE,CAAE;MACjB,CAAC;MAED,MAAMC,QAAO,GAAI,IAAIC,oBAAoB,CAAC,CAACC,OAAO,EAAEF,QAAQ,KAAK;QAC/DE,OAAO,CAACC,OAAO,CAACC,KAAI,IAAK;UACvB,IAAIA,KAAK,CAACC,cAAc,EAAE;YACxB,MAAMC,GAAE,GAAIF,KAAK,CAACG,MAAM;YACxBD,GAAG,CAACE,GAAE,GAAIF,GAAG,CAACG,OAAO,CAACD,GAAG,EAAE;YAC3BR,QAAQ,CAACU,SAAS,CAACJ,GAAG,CAAC,EAAE;UAC3B;QACF,CAAC,CAAC;MACJ,CAAC,EAAEV,OAAO,CAAC;;MAEX;MACA,IAAI,IAAI,CAACe,KAAK,CAACC,MAAK,IAAK,IAAI,CAACD,KAAK,CAACC,MAAM,CAAC1B,MAAK,GAAI,CAAC,EAAE;QACrD,IAAI,CAACyB,KAAK,CAACC,MAAM,CAACT,OAAO,CAACG,GAAE,IAAKN,QAAQ,CAACa,OAAO,CAACP,GAAG,CAAC,CAAC;MACzD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}