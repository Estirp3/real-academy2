{"ast":null,"code":"export default {\n  name: \"PhotoGallery\",\n  data() {\n    return {\n      imageUrls: [],\n      // URLs de las imágenes\n      modalVisible: false,\n      // Controla la visibilidad del modal\n      modalImage: null // Imagen seleccionada para mostrar en el modal\n    };\n  },\n  computed: {\n    // Duplica las URLs para lograr un bucle infinito en el carrusel\n    repeatedImageUrls() {\n      return this.imageUrls.concat(this.imageUrls);\n    }\n  },\n  async created() {\n    this.imageUrls = await this.fetchImageUrls();\n  },\n  mounted() {\n    this.lazyLoadImages();\n    this.startScrolling();\n  },\n  methods: {\n    async fetchImageUrls() {\n      const totalImages = 50; // Cambia según el total de imágenes que tengas\n      return Array.from({\n        length: totalImages\n      }, (_, i) => ({\n        lowQuality: `/real-academy-fc/fotos-real/foto-real-facup-${i + 1}-low.jpeg`,\n        // Imagen de baja calidad\n        highQuality: `/real-academy-fc/fotos-real/foto-real-facup-${i + 1}.jpeg` // Imagen de alta calidad\n      }));\n    },\n    openModal(imageUrl) {\n      this.modalImage = imageUrl;\n      this.modalVisible = true;\n      document.body.style.overflow = \"hidden\"; // Desactiva el scroll del sitio\n    },\n    closeModal() {\n      this.modalVisible = false;\n      document.body.style.overflow = \"\"; // Reactiva el scroll del sitio\n    },\n    loadHighQuality(image, index) {\n      const highQualityImage = new Image();\n      highQualityImage.src = image.highQuality;\n      highQualityImage.onload = () => {\n        this.$set(this.repeatedImageUrls, index, {\n          ...image,\n          lowQuality: image.highQuality // Reemplaza la imagen de baja calidad con la de alta\n        });\n      };\n    },\n    lazyLoadImages() {\n      const images = this.$el.querySelectorAll('.slide img');\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const img = entry.target;\n            img.src = img.dataset.src; // Cambia la src a la imagen de alta calidad\n            observer.unobserve(img);\n          }\n        });\n      });\n      images.forEach(image => {\n        observer.observe(image);\n      });\n    },\n    startScrolling() {\n      const slider = this.$el.querySelector('.slide-track');\n      let start = null;\n      const scroll = timestamp => {\n        if (!start) start = timestamp;\n        const progress = timestamp - start;\n        slider.style.transform = `translateX(${-progress / 100}px)`;\n        if (progress < slider.offsetWidth) {\n          requestAnimationFrame(scroll);\n        } else {\n          start = null;\n          requestAnimationFrame(scroll); // Reinicia el scroll cuando llega al final\n        }\n      };\n      requestAnimationFrame(scroll);\n    }\n  }\n};","map":{"version":3,"names":["name","data","imageUrls","modalVisible","modalImage","computed","repeatedImageUrls","concat","created","fetchImageUrls","mounted","lazyLoadImages","startScrolling","methods","totalImages","Array","from","length","_","i","lowQuality","highQuality","openModal","imageUrl","document","body","style","overflow","closeModal","loadHighQuality","image","index","highQualityImage","Image","src","onload","$set","images","$el","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","img","target","dataset","unobserve","observe","slider","querySelector","start","scroll","timestamp","progress","transform","offsetWidth","requestAnimationFrame"],"sources":["C:\\Users\\DIVDOC-INTERNET\\Desktop\\real-academy\\real-academy-frontend\\src\\components\\PhotoGallery.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" id=\"gallery\">\r\n    <div class=\"slider\">\r\n      <div class=\"slide-track\">\r\n        <div\r\n          class=\"slide\"\r\n          v-for=\"(image, index) in repeatedImageUrls\"\r\n          :key=\"'image-' + index\"\r\n        >\r\n          <img \r\n            :src=\"image.lowQuality\" \r\n            @click=\"openModal(image.highQuality)\" \r\n            @load=\"loadHighQuality(image, index)\" \r\n            loading=\"lazy\" \r\n            alt=\"\" \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para visualizar imagen en pantalla completa -->\r\n    <div v-if=\"modalVisible\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content fade-in\" @click.stop>\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <img :src=\"modalImage\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PhotoGallery\",\r\n  data() {\r\n    return {\r\n      imageUrls: [], // URLs de las imágenes\r\n      modalVisible: false, // Controla la visibilidad del modal\r\n      modalImage: null, // Imagen seleccionada para mostrar en el modal\r\n    };\r\n  },\r\n  computed: {\r\n    // Duplica las URLs para lograr un bucle infinito en el carrusel\r\n    repeatedImageUrls() {\r\n      return this.imageUrls.concat(this.imageUrls);\r\n    },\r\n  },\r\n  async created() {\r\n    this.imageUrls = await this.fetchImageUrls();\r\n  },\r\n  mounted() {\r\n    this.lazyLoadImages();\r\n    this.startScrolling();\r\n  },\r\n  methods: {\r\n    async fetchImageUrls() {\r\n      const totalImages = 50; // Cambia según el total de imágenes que tengas\r\n      return Array.from(\r\n        { length: totalImages },\r\n        (_, i) => ({\r\n          lowQuality: `/real-academy-fc/fotos-real/foto-real-facup-${i + 1}-low.jpeg`, // Imagen de baja calidad\r\n          highQuality: `/real-academy-fc/fotos-real/foto-real-facup-${i + 1}.jpeg`,  // Imagen de alta calidad\r\n        })\r\n      );\r\n    },\r\n    openModal(imageUrl) {\r\n      this.modalImage = imageUrl;\r\n      this.modalVisible = true;\r\n      document.body.style.overflow = \"hidden\"; // Desactiva el scroll del sitio\r\n    },\r\n    closeModal() {\r\n      this.modalVisible = false;\r\n      document.body.style.overflow = \"\"; // Reactiva el scroll del sitio\r\n    },\r\n    loadHighQuality(image, index) {\r\n      const highQualityImage = new Image();\r\n      highQualityImage.src = image.highQuality;\r\n      highQualityImage.onload = () => {\r\n        this.$set(this.repeatedImageUrls, index, {\r\n          ...image,\r\n          lowQuality: image.highQuality, // Reemplaza la imagen de baja calidad con la de alta\r\n        });\r\n      };\r\n    },\r\n    lazyLoadImages() {\r\n      const images = this.$el.querySelectorAll('.slide img');\r\n      const observer = new IntersectionObserver((entries, observer) => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            const img = entry.target;\r\n            img.src = img.dataset.src; // Cambia la src a la imagen de alta calidad\r\n            observer.unobserve(img);\r\n          }\r\n        });\r\n      });\r\n      images.forEach(image => {\r\n        observer.observe(image);\r\n      });\r\n    },\r\n    startScrolling() {\r\n      const slider = this.$el.querySelector('.slide-track');\r\n      let start = null;\r\n      const scroll = timestamp => {\r\n        if (!start) start = timestamp;\r\n        const progress = timestamp - start;\r\n        slider.style.transform = `translateX(${-progress / 100}px)`;\r\n        if (progress < slider.offsetWidth) {\r\n          requestAnimationFrame(scroll);\r\n        } else {\r\n          start = null;\r\n          requestAnimationFrame(scroll); // Reinicia el scroll cuando llega al final\r\n        }\r\n      };\r\n      requestAnimationFrame(scroll);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n.container {\r\n  position: relative;\r\n}\r\n\r\n@keyframes scroll {\r\n  0% {\r\n    transform: translateX(0);\r\n  }\r\n  100% {\r\n    transform: translateX(calc(-400px * 30)); /* Ajusta para la cantidad de imágenes */\r\n  }\r\n}\r\n\r\n.slider {\r\n  background: black;\r\n  height: 500px;\r\n  margin: auto;\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 100vw;\r\n}\r\n\r\n.slide-track {\r\n  display: flex;\r\n  width: calc(350px * 100); /* Ajusta para que el carrusel cubra todas las imágenes */\r\n}\r\n\r\n.slide {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.slide img {\r\n  height: 350px;\r\n  width: 350px;\r\n  object-fit: cover;\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n  margin: 20px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  top: 100px;\r\n}\r\n\r\n.slide img:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n/* Estilos del modal */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  opacity: 0;\r\n  animation: fadeIn 0.5s forwards;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 20px;\r\n  font-size: 24px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.close:hover {\r\n  transform: scale(1.2);\r\n}\r\n\r\n.modal-content img {\r\n  max-width: 90vw;\r\n  max-height: 90vh;\r\n  object-fit: contain;\r\n  border-radius: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AA+BA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MAAE;MACfC,YAAY,EAAE,KAAK;MAAE;MACrBC,UAAU,EAAE,IAAI,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC,IAAI,CAACL,SAAS,CAAC;IAC9C;EACF,CAAC;EACD,MAAMM,OAAOA,CAAA,EAAG;IACd,IAAI,CAACN,SAAQ,GAAI,MAAM,IAAI,CAACO,cAAc,CAAC,CAAC;EAC9C,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMJ,cAAcA,CAAA,EAAG;MACrB,MAAMK,WAAU,GAAI,EAAE,EAAE;MACxB,OAAOC,KAAK,CAACC,IAAI,CACf;QAAEC,MAAM,EAAEH;MAAY,CAAC,EACvB,CAACI,CAAC,EAAEC,CAAC,MAAM;QACTC,UAAU,EAAE,+CAA+CD,CAAA,GAAI,CAAC,WAAW;QAAE;QAC7EE,WAAW,EAAE,+CAA+CF,CAAA,GAAI,CAAC,OAAO,CAAG;MAC7E,CAAC,CACH,CAAC;IACH,CAAC;IACDG,SAASA,CAACC,QAAQ,EAAE;MAClB,IAAI,CAACnB,UAAS,GAAImB,QAAQ;MAC1B,IAAI,CAACpB,YAAW,GAAI,IAAI;MACxBqB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,QAAQ,EAAE;IAC3C,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACzB,YAAW,GAAI,KAAK;MACzBqB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAO,GAAI,EAAE,EAAE;IACrC,CAAC;IACDE,eAAeA,CAACC,KAAK,EAAEC,KAAK,EAAE;MAC5B,MAAMC,gBAAe,GAAI,IAAIC,KAAK,CAAC,CAAC;MACpCD,gBAAgB,CAACE,GAAE,GAAIJ,KAAK,CAACT,WAAW;MACxCW,gBAAgB,CAACG,MAAK,GAAI,MAAM;QAC9B,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC9B,iBAAiB,EAAEyB,KAAK,EAAE;UACvC,GAAGD,KAAK;UACRV,UAAU,EAAEU,KAAK,CAACT,WAAW,CAAE;QACjC,CAAC,CAAC;MACJ,CAAC;IACH,CAAC;IACDV,cAAcA,CAAA,EAAG;MACf,MAAM0B,MAAK,GAAI,IAAI,CAACC,GAAG,CAACC,gBAAgB,CAAC,YAAY,CAAC;MACtD,MAAMC,QAAO,GAAI,IAAIC,oBAAoB,CAAC,CAACC,OAAO,EAAEF,QAAQ,KAAK;QAC/DE,OAAO,CAACC,OAAO,CAACC,KAAI,IAAK;UACvB,IAAIA,KAAK,CAACC,cAAc,EAAE;YACxB,MAAMC,GAAE,GAAIF,KAAK,CAACG,MAAM;YACxBD,GAAG,CAACZ,GAAE,GAAIY,GAAG,CAACE,OAAO,CAACd,GAAG,EAAE;YAC3BM,QAAQ,CAACS,SAAS,CAACH,GAAG,CAAC;UACzB;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MACFT,MAAM,CAACM,OAAO,CAACb,KAAI,IAAK;QACtBU,QAAQ,CAACU,OAAO,CAACpB,KAAK,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC;IACDlB,cAAcA,CAAA,EAAG;MACf,MAAMuC,MAAK,GAAI,IAAI,CAACb,GAAG,CAACc,aAAa,CAAC,cAAc,CAAC;MACrD,IAAIC,KAAI,GAAI,IAAI;MAChB,MAAMC,MAAK,GAAIC,SAAQ,IAAK;QAC1B,IAAI,CAACF,KAAK,EAAEA,KAAI,GAAIE,SAAS;QAC7B,MAAMC,QAAO,GAAID,SAAQ,GAAIF,KAAK;QAClCF,MAAM,CAACzB,KAAK,CAAC+B,SAAQ,GAAI,cAAc,CAACD,QAAO,GAAI,GAAG,KAAK;QAC3D,IAAIA,QAAO,GAAIL,MAAM,CAACO,WAAW,EAAE;UACjCC,qBAAqB,CAACL,MAAM,CAAC;QAC/B,OAAO;UACLD,KAAI,GAAI,IAAI;UACZM,qBAAqB,CAACL,MAAM,CAAC,EAAE;QACjC;MACF,CAAC;MACDK,qBAAqB,CAACL,MAAM,CAAC;IAC/B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}